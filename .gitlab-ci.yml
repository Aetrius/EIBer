stages:
  - build_iso

# Define global variables that can be overridden for different jobs
variables:
  GITLAB_API_V4_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID"
  BASE_FOLDER: "site/shop"  # Default base folder path
  IMAGE_VERSION: "1.0.2"  # Default Edge Image Builder version
  CUSTOM_OUTPUT_IMAGE_NAME: "custom_output.iso"  # Default output image name
  OUTPUT_IMAGE_NAME: "SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso"  # Default output image name
  BASE_IMAGE_NAME: "SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso"
  GOLDEN_IMAGE_ISO_PATH: "$GITLAB_API_V4_URL/packages/generic/suse_enterprise/5.5.0/SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso"
  GITLAB_ISO_OUTPUT_PATH: "$GITLAB_API_V4_URL/packages/generic/suse_enterprise/5.5.0"
  SUSE_REGISTRY_CODE: $SUSE_REGISTRY_CODE


# Template job for building ISOs
.build_iso_template:
  stage: build_iso
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:20.10
  services:
    - docker:20.10-dind
  variables:
    FF_NETWORK_PER_BUILD: "false"
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login registry.gitlab.com -u gitlab-ci-token --password-stdin
  script:
    - apk add --no-cache curl tree
    - mkdir -p $(pwd)/eib $(pwd)/eib/base-images $(pwd)/eib/logs $(pwd)/eib/iso $(pwd)/containers /logs
    - mv ${BASE_FOLDER}/* ./eib/
    - echo "Starting CURL OUTPUT" >> ./eib/logs/script.log
    - find ./eib/ -type f -exec sed -i "s/CUSTOM_OUTPUT_IMAGE_NAME/${CUSTOM_OUTPUT_IMAGE_NAME}/g" {} +
    - find ./eib/ -type f -exec sed -i "s/BASE_IMAGE_NAME/${BASE_IMAGE_NAME}/g" {} +
    # Handles replacing registry code if it's in the file otherwise, continue anyway....
    - find ./eib/ -type f -exec sed -i "s/SUSE_REGISTRY_CODE/${SUSE_REGISTRY_CODE}/g" {} + || true
    - |
      curl -L --header "PRIVATE-TOKEN: $PRIV_TOKEN" --retry 5 --retry-connrefused --output $(pwd)/eib/base-images/${OUTPUT_IMAGE_NAME} \
      "${GOLDEN_IMAGE_ISO_PATH}"
    - ls -asl $(pwd)/eib/base-images
    - docker info
    - |
      docker run --rm --privileged \
      -v $(pwd)/containers:/var/lib/containers:rw -v $(pwd)/eib:/eib registry.opensuse.org/isv/suse/edge/edgeimagebuilder/containerfile/suse/edge-image-builder:${IMAGE_VERSION} build --definition-file definition.yaml --config-dir /eib --build-dir /eib/_build || true
    - tree $(pwd)/eib
    - cp ./eib/_build/build*/*.log ./eib/logs/
    - |
      curl -v --retry 5 --retry-delay 10 -H "PRIVATE-TOKEN: $PRIV_TOKEN" --upload-file "$(pwd)/eib/${CUSTOM_OUTPUT_IMAGE_NAME}.iso" \
      "${GITLAB_ISO_OUTPUT_PATH}/${CUSTOM_OUTPUT_IMAGE_NAME}_$CI_COMMIT_SHORT_SHA.iso" || true
  artifacts:
    paths:
      - ./eib/logs/*.log
    when: always
    expire_in: 1 hour
  only:
    changes:
      - site/**/*

# Job for building ISO for Site/Shop1
build_iso_site_shop1:
  extends: .build_iso_template
  variables:
    BASE_FOLDER: "site/shop1"  # Override the base folder path for this job
    IMAGE_VERSION: "1.0.2"  # Specify the Edge Image Builder version
    CUSTOM_OUTPUT_IMAGE_NAME: "shop1_output" 
    OUTPUT_IMAGE_NAME: "SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso" 

# Job for building ISO for Site/Shop2
build_iso_site_shop2:
  extends: .build_iso_template
  variables:
    BASE_FOLDER: "site/shop2"  # Override the base folder path for this job
    IMAGE_VERSION: "1.0.2"  # Use a different version of the Edge Image Builder
    CUSTOM_OUTPUT_IMAGE_NAME: "shop2_output.iso"
    OUTPUT_IMAGE_NAME: "SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso" 

# Job for building ISO for Site/Shop3
build_iso_site_shop3:
  extends: .build_iso_template
  variables:
    BASE_FOLDER: "site/shop3"  # Override the base folder path for this job
    IMAGE_VERSION: "1.0.2"  # Use a different version of the Edge Image Builder
    CUSTOM_OUTPUT_IMAGE_NAME: "shop3_output.iso"
    OUTPUT_IMAGE_NAME: "SLE-Micro.x86_64-5.5.0-Default-RT-SelfInstall-GM2.install.iso" 